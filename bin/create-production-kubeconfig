#!/bin/bash

# Set variables.
# CHANGE THESE VARIABLE TO YOUR SET-UP.
CBT_PROJECT="container-builder-test-161511"
CBT_ZONE="europe-west1-d"

# Set the project and default GCP zone.
gcloud config set project $CBT_PROJECT
gcloud config set compute/zone $CBT_ZONE

# Create GKE access credentials.
gcloud container clusters get-credentials production \
  --zone $CBT_ZONE
SERVER=$(gcloud container clusters describe production \
  --format 'value(endpoint)')
CERTIFICATE_AUTHORITY_DATA=$(gcloud container clusters describe production \
  --format 'value(masterAuth.clusterCaCertificate)')
CLIENT_CERTIFICATE_DATA=$(gcloud container clusters describe production \
  --format 'value(masterAuth.clientCertificate)')
CLIENT_KEY_DATA=$(gcloud container clusters describe production \
  --format 'value(masterAuth.clientKey)')
kubectl config set-cluster gke --kubeconfig production.kubeconfig
kubectl config set clusters.gke.server \
  "https://${SERVER}" \
  --kubeconfig production.kubeconfig
kubectl config set clusters.gke.certificate-authority-data \
  ${CERTIFICATE_AUTHORITY_DATA} \
  --kubeconfig production.kubeconfig
kubectl config set-credentials cloudbuilder --kubeconfig production.kubeconfig
kubectl config set users.cloudbuilder.client-certificate-data \
  ${CLIENT_CERTIFICATE_DATA} \
  --kubeconfig production.kubeconfig
kubectl config set users.cloudbuilder.client-key-data \
  ${CLIENT_KEY_DATA} \
  --kubeconfig production.kubeconfig
kubectl config set-context cloudbuilder \
  --cluster=gke \
  --user=cloudbuilder \
  --kubeconfig production.kubeconfig
kubectl config use-context cloudbuilder \
  --kubeconfig production.kubeconfig

# Upload credentials to a bucket.
gsutil mb -c multi_regional gs://$CBT_PROJECT
gsutil cp production.kubeconfig gs://$CBT_PROJECT/production.kubeconfig
